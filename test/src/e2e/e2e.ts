"use strict";

import * as fs from "fs";
import {} from "mocha";
import {createViewModels} from "../../../src/index";
import {Options, FileMapping} from "../../../src/tasks/model/options";
import {expect} from "chai";


describe("E2E Tests", () => {

      it("Hero", (done) => {
        let expectedFileName = "./test/src/expected/hero/heroViewModel.ts",
            generatedFileName = "./test/dist/_autogenerated_viewmodels/heroes/hero.ts",
            sourceFileName = "./test/src/model/hero/hero.ts";

        let options: Options = {
          files: [
            {
              viewModelNames: ["HeroDetailViewModel", "HeroViewModel"],
              source: sourceFileName,
              destination: generatedFileName
            },
            {
              viewModelNames: ["HeroDetailViewModel", "HeroViewModel1"],
              source: sourceFileName,
              destination: "./test/dist/_autogenerated_viewmodels/heroes/hero2.ts"
            }
          ],
          allInOneFile: null,
        };

        createViewModels(options);
        let expected = fs.readFileSync(expectedFileName, "utf-8");
        let result = fs.readFileSync(generatedFileName, "utf-8");

        let expected2 = fs.readFileSync("./test/src/expected/hero/hero2.ts", "utf-8");
        let result2 = fs.readFileSync( "./test/dist/_autogenerated_viewmodels/heroes/hero2.ts", "utf-8");
        expect(result).be.equal(expected);
        expect(result2).be.equal(expected2);

        done();
      });

});
